{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SM213 Assembly",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#indexing"
		},
		{
			"include": "#j_or_br"
		},
		{
			"include": "#instructions"
		},
		{
			"include": "#registers"
		},
		{
			"include": "#labels"
		},
		{
			"include": "#directives"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.line.number-sign.sm213",
				"match": "#(.*)\\n"
			}]
		},
		"instructions": {
			"patterns": [
				{
					"name": "keyword.other.instruction.sm213",
					"match": "\\b(ld|st|halt|nop|mov|add|inc|inca|dec|deca|not|shl|shr|gpc|sys|j|br|bgt|beq)\\b"
				}
			]
		},
		"registers": {
			"patterns": [
				{
					"name": "variable.language.register.sm213",
					"match": "\\br[0-7]\\b"
				}
			]
		},
		"labels": {
			"patterns": [
				{
					"name": "entity.name.tag.sm213",
					"match": "^(\\w|\\d)+:"
				}
			]
		},
		"directives": {
			"patterns": [
				{
					"match": "^(\\.(pos|address)) (0x\\d+)",
					"captures": {
						"1": { "name": "keyword.control.sm213" },
						"3": { "name": "constant.numeric.valhex.sm213" }
					}
				},
				{
					"match": "\\s*(\\.(long|data)) (((0x|-)?\\d+)|(\\w(\\w|\\d)*))",
					"captures": {
						"1": { "name": "support.type.sm213" },
						"4": { "name": "constant.numeric.val.sm213"},
						"6": { "name": "variable.name.addr.sm213" }
					}
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"comment": "Value hex constant, as opposed to offset",
					"name": "constant.numeric.valhex.sm213",
					"match": "\\$0x\\d+\\b"
				},
				{
					"comment": "Value decimal constant, as opposed to offset",
					"name": "constant.numeric.valdec.sm213",
					"match": "\\$(-?\\d)+\\b"
				},
				{
					"comment": "Offset hex constant, as opposed to value",
					"match": "(0x\\d+)\\((r[0-7])\\)",
					"captures": {
						"1" : { "name": "constant.numeric.offsethex.sm213" },
						"2" : { "name": "variable.language.register.sm213" }
					}
				},
				{
					"comment": "Offset decimal constant, as opposed to value",
					"match": "(\\d+)\\((r[0-7])\\)",
					"captures": {
						"1" : { "name": "constant.numeric.offsetdec.sm213" },
						"2" : { "name": "variable.language.register.sm213" }
					}
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"match": "(\\$(\\w(\\w|\\d)*))\\b",
					"captures": {
						"1": { "name": "variable.name.addr.sm213" }
					}
				}
			]
		},
		"j_or_br": {
			"patterns": [
				{
					"match": "\\b(br|j)\\s+((0x\\d+)|(\\w(\\w|\\d)*))",
					"captures": {
						"1": { "name": "keyword.control.branch.sm213" },
						"3": { "name": "constant.numeric.jumphex.sm213" },
						"4": { "name": "variable.name.addr.sm213" }
					}
				},
				{
					"match": "\\b(beq|bgt)\\s+(r[0-7]),\\s*((0x\\d+)|(\\w(\\w|\\d)*))",
					"captures": {
						"1": { "name": "keyword.control.branch.cond.sm213" },
						"2": { "name": "variable.language.register.sm213" },
						"4": { "name": "variable.numeric.jumphex.sm213" },
						"5": { "name": "variable.name.addr.sm213" }
					}
				}
			]
		},
		"indexing": {
			"patterns": [
				{
					"match": "\\(\\s*(r[0-7])\\s*,\\s*(r[0-7])\\s*,\\s*(4)\\s*\\)",
					"captures": {
						"1": { "name": "variable.language.register.sm213" },
						"2": { "name": "variable.language.register.sm213" },
						"3": { "name": "constant.numeric.index.sm213" }
					}
				}
			]
		}
	},
	"scopeName": "source.sm213"
}